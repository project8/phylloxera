/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef REALTRITIUMFREQUENCYSPECTRUM
#define REALTRITIUMFREQUENCYSPECTRUM

#include "RooRealProxy.h"
#include "RooAbsReal.h"
#include "RooAbsPdf.h"
#include "RooArgSet.h"

// namespace Phylloxera
// {
class RealTritiumFrequencySpectrum : public RooAbsPdf
{
public:
  RealTritiumFrequencySpectrum(){};
  RealTritiumFrequencySpectrum(const char *name, const char *title,
                      RooAbsReal &_F,
                      RooAbsReal &_B,
                      RooAbsReal &_Q,
                      RooAbsReal &_mbeta);
  RealTritiumFrequencySpectrum(const RealTritiumFrequencySpectrum &other, const char *name = 0);
  virtual TObject *clone(const char *newname) const { return new RealTritiumFrequencySpectrum(*this, newname); }
  // inline virtual ~RealTritiumFrequencySpectrum(){};

protected:
  RooRealProxy F;
  RooRealProxy B;
  RooRealProxy Q;
  RooRealProxy mbeta;




  mutable double KE;
  mutable double y;

  bool multiplyEfficiency;

public:
  mutable Double_t efficiency_factor;
  std::vector<double> eff_coeff;

  Double_t evaluate() const;
  void SetEfficiencyCoefficients(RooArgSet*);
  void CalculateEfficiency(double f) const;
  //void efficiency() const;

  ClassDef(RealTritiumFrequencySpectrum, 1) // Your description goes here...
};
// }

#endif
